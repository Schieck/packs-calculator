x-common-secrets: &common-secrets
  JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-change-in-production}
  AUTH_SECRET: ${AUTH_SECRET:-your-auth-secret-change-in-production}

services:
  db:
    image: postgres:16-alpine
    container_name: packs-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-packer}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-packs}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD","pg_isready","-U","${POSTGRES_USER:-packer}","-d","${POSTGRES_DB:-packs}"]
      interval: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - packs-network
    deploy:
      resources:
        limits:
          memory: 1G

  backend:
    build: ./backend
    container_name: packs-backend
    environment:
      - DB_DSN=postgres://${POSTGRES_USER:-packer}:${POSTGRES_PASSWORD:-secret}@${DB_HOST:-db}:${DB_PORT:-5432}/${POSTGRES_DB:-packs}?sslmode=disable
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-change-in-production}
      - AUTH_SECRET=${AUTH_SECRET:-your-auth-secret-change-in-production}
      - PORT=${BACKEND_PORT:-8080}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8080}:${BACKEND_PORT:-8080}"
    restart: unless-stopped
    networks:
      - packs-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-8080}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  frontend:
    build: 
      context: ./frontend
      args:
        AUTH_SECRET: ${AUTH_SECRET:-your-auth-secret-change-in-production}
        API_BASE_URL: http://backend:8080/api/v1
    container_name: packs-frontend
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - packs-network
    deploy:
      resources:
        limits:
          memory: 256M

networks:
  packs-network:
    driver: bridge

volumes:
  dbdata:
